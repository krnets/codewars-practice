import codewars_test as test
from kata import range_extractor

test.describe("Normal tests")
test.assert_equals(range_extractor([]), 'range(0)')
test.assert_equals(range_extractor([0]), 'range(1)')
test.assert_equals(range_extractor([0, 1]), 'range(2)')
test.assert_equals(range_extractor([9, 10]), 'range(9,11)')
test.assert_equals(range_extractor([1, 2, 3]), 'range(1,4)')
test.assert_equals(range_extractor([1, 3, 5]), 'range(1,6,2)')
test.assert_equals(range_extractor([7, 10]), 'range(7,11,3)')
test.assert_equals(range_extractor([5, 1, -3, -7]), 'range(5,-8,-4)')
test.assert_equals(range_extractor([0, 1, 2, 3, 4, 5, 6]), 'range(7)')
test.assert_equals(range_extractor([0, 3, 6, 9, 12, 15]), 'range(0,16,3)')
test.assert_equals(range_extractor([7, 8, 9, 10, 11, 12]), 'range(7,13)')
test.assert_equals(range_extractor([211, 170, 129]), 'range(211,128,-41)')
test.assert_equals(range_extractor([7, 5, 3, 1, -1, -3]), 'range(7,-4,-2)')
test.assert_equals(range_extractor([9, 6, 3, 0, -3, -6, -9, -12]), 'range(9,-13,-3)')
test.assert_equals(range_extractor([64, 56, 48, 40, 32, 24, 16, 8, 0]), 'range(64,-1,-8)')
test.assert_equals(range_extractor([0, 10, 20, 30, 40, 50, 60, 70, 80, 90]), 'range(0,91,10)')
test.assert_equals(range_extractor([13, 26, 39, 52, 65, 78, 91, 104, 117]), 'range(13,118,13)')
test.assert_equals(range_extractor([101, 102, 103, 104, 105, 106, 107, 108, 109]), 'range(101,110)')
test.assert_equals(range_extractor([1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048]), 'range(1024,2049,128)')
test.assert_equals(range_extractor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]), 'range(32)')
test.assert_equals(range_extractor([-904, -793, -682, -571, -460, -349, -238, -127, -16, 95, 206, 317, 428, 539, 650, 761, 872, 983, 1094, 1205]), 'range(-904,1206,111)')
test.assert_equals(range_extractor([312, 315, 318, 321, 324, 327, 330, 333, 336, 339, 342, 345, 348, 351, 354, 357, 360, 363, 366, 369, 372, 375, 378, 381, 384, 387, 390, 393, 396, 399, 402, 405]), 'range(312,406,3)')
test.assert_equals(range_extractor([708, 8828, 16948, 25068, 33188, 41308, 49428, 57548, 65668, 73788, 81908, 90028, 98148, 106268, 114388, 122508, 130628, 138748, 146868, 154988, 163108, 171228, 179348, 187468, 195588, 203708, 211828, 219948, 228068, 236188, 244308, 252428, 260548, 268668, 276788, 284908, 293028, 301148, 309268]), 'range(708,309269,8120)')
test.assert_equals(range_extractor([0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300, 6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200, 7300, 7400, 7500, 7600, 7700, 7800, 7900, 8000, 8100, 8200, 8300, 8400, 8500, 8600, 8700, 8800, 8900, 9000, 9100, 9200, 9300, 9400, 9500, 9600, 9700, 9800, 9900, 10000]), 'range(0,10001,100)')
test.describe("False tests")
test.assert_equals(range_extractor(['a']), False)
test.assert_equals(range_extractor(['Hello','World','=)']), False)
test.assert_equals(range_extractor([1, 2, 3, 1, 5, 6, 7]), False)
test.assert_equals(range_extractor([0, 1, 2, 3, 'a', 4]), False)
test.assert_equals(range_extractor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), False)
test.assert_equals(range_extractor([9, 9.5, 10, 10.5, 11, 11.5, 12]), False)
test.assert_equals(range_extractor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]), False)
test.assert_equals(range_extractor([1, 2, 5, 7, 9, 11]), False)