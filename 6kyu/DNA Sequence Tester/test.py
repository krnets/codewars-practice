import codewars_test as test
from kata import check_DNA

test.describe('* Basic Tests *')
test.it('Testing for GTCTTAGTGTAGCTATGCATGC and GCATGCATAGCTACACTACGAC')
test.assert_equals(check_DNA('GTCTTAGTGTAGCTATGCATGC','GCATGCATAGCTACACTACGAC'),False)
test.it('Testing for ATGCTACG and CGTAGCAT')
test.assert_equals(check_DNA('ATGCTACG','CGTAGCAT'),True)
test.it('Testing for AGTCTGTATGCATCGTACCC and GGGTACGATGCATACAGACT')
test.assert_equals(check_DNA('AGTCTGTATGCATCGTACCC','GGGTACGATGCATACAGACT'),True)
test.it('Testing for TGCTACGTACGATCGACGATCCACGAC and GTCGTGGATCGTCGATCGTACGTAGCA')
test.assert_equals(check_DNA('TGCTACGTACGATCGACGATCCACGAC','GTCGTGGATCGTCGATCGTACGTAGCA'),True)
test.it('Testing for ATGCCTACGGCCATATATATTTAG and CTAAATATGTATGGCCGTAGGCAT')
test.assert_equals(check_DNA('ATGCCTACGGCCATATATATTTAG','CTAAATATGTATGGCCGTAGGCAT'),False)
test.it('Testing for GTCACCGA and TCGGCTGAC')
test.assert_equals(check_DNA('GTCACCGA','TCGGCTGAC'),False)
test.it('Testing for TAATACCCGACTAATTCCCC and GGGGAATTTCGGGTATTA')
test.assert_equals(check_DNA('TAATACCCGACTAATTCCCC','GGGGAATTTCGGGTATTA'),False)
test.it('Testing for GCTAACTCGAAGCTATACGTTA and TAACGTATAGCTTCGAGGTTAGC')
test.assert_equals(check_DNA('GCTAACTCGAAGCTATACGTTA','TAACGTATAGCTTCGAGGTTAGC'),False)
test.describe('* Sequences of different length *')
test.it('Testing for GCGCTGCTAGCTGATCGA and ACGTACGATCGATCAGCTAGCAGCGCTAC')
test.assert_equals(check_DNA('GCGCTGCTAGCTGATCGA','ACGTACGATCGATCAGCTAGCAGCGCTAC'),True)
test.it('Testing for GCTAGCACCCATTAGGAGATAC and CTCCTAATGGGTG')
test.assert_equals(check_DNA('GCTAGCACCCATTAGGAGATAC','CTCCTAATGGGTG'),True)
test.it('Testing for TAGCATCGCCAAATTATGCGTCAGTCTGCCCG and GGGCA')
test.assert_equals(check_DNA('TAGCATCGCCAAATTATGCGTCAGTCTGCCCG','GGGCA'),True)
test.it('Testing for ACGACTACGTGCGCCGCTAATATT and GCACGGGTCGT')
test.assert_equals(check_DNA('ACGACTACGTGCGCCGCTAATATT','GCACGGGTCGT'),False)
test.describe('* Strands only partially bonded *')
test.it('Testing for CGATACGAACCCATAATCG and CTACACCGGCCGATTATGG')
test.assert_equals(check_DNA('CGATACGAACCCATAATCG','CTACACCGGCCGATTATGG'),False)
test.it('Testing for CGACATCGAGGGGGCTCAGAAGTACTGA and CATGGCGTCAGTACTTCTGAGCC')
test.assert_equals(check_DNA('CGACATCGAGGGGGCTCAGAAGTACTGA','CATGGCGTCAGTACTTCTGAGCC'),False)
test.it('Testing for GAGCAGTTGGTAGTTT and GTATCGAAACTACCA')
test.assert_equals(check_DNA('GAGCAGTTGGTAGTTT','GTATCGAAACTACCA'),False)
test.it('Testing for TACGATCCAAGGCTACTCAGAG and GGGATACTCTGAGTAGCCTTGGAA')
test.assert_equals(check_DNA('TACGATCCAAGGCTACTCAGAG','GGGATACTCTGAGTAGCCTTGGAA'),False)