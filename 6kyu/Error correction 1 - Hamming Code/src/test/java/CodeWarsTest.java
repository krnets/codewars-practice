import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CodeWarsTest {
    private final CodeWars codeWars = new CodeWars();

    @Test
    public void testEncodeShouldWorkWithShortWord() {
        assertEquals("Should work with short word",
                "000111111000111000000000000111111000000111000111000111111111111000000111", codeWars
                        .encode("hey"));
    }

    @Test
    public void testEncodeShouldWorkWithLongerWord() {
        assertEquals("Should work with longer word",
codeWars
                        .encode("The Sensei told me that i can do this kata"));
    }

    @Test
    public void testEncodeShouldWorkWithNumbers() {
        assertEquals("Should work with numbers",
                "000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000", codeWars
                        .encode("T3st"));
    }

    @Test
    public void testEncodeShouldWorkWithSpecialChars() {
        assertEquals("Should work with special characters", "000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111", codeWars
                .encode("T?st!%"));
    }

    @Test
    public void testDecodeShouldWorkWithShortWord() {
        assertEquals("Should work with short word",
                "hey", codeWars
                        .decode("100111111000111001000010000111111000000111001111000111110110111000010111"));
    }

    @Test
    public void testDecodeShouldWorkWithLongerWord() {
        assertEquals("Should work with longer word",
                "The Sensei told me that i can do this kata",
                codeWars
                        .decode
    }

    @Test
    public void testDecodeShouldWorkWithNumbers() {
        assertEquals("Should work with numbers", "T3st", codeWars
                .decode("000111000111000111000001000000111111000000111111000111111111000000111011000111111111000111000000"));
    }

    @Test
    public void testDecodeShouldWorkWithSpecialChars() {
        assertEquals("Should work with special characters", "T?st!%", codeWars
                .decode("000111000111000111000010000000111111111111011111000111111111000000111111000111101111000111000000000000111000000000000111000000111000000111000111"));
    }
}